@page "/login"
@inject HttpClient Http
@using FlagSpillet.Models;
@inject NavigationManager NavManager
@inject IHttpClientFactory HttpClientFactory;

<div class="text-center">
    <EditForm class="form--signin mb-4" Model="userDTO" OnValidSubmit="LoginTask">
        <div class="form-group">
            <label for="username">Username</label>
            <InputText class="form-control" id="username" aria-describedby="emailHelp" placeholder="Username" @bind-Value="@userDTO.Username" required />
        </div>

        <div class="form-group">
            <label for="email">Email</label>
            <InputText class="form-control" id="email" aria-describedby="emailHelp" placeholder="Email" @bind-Value="@userDTO.Email" required />
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <InputText type="password" class="form-control" id="password" placeholder="Password" @bind-Value="@userDTO.Password" required />
        </div>

        <div class="form-group">
            <button type="submit" id="login" name="login" class="btn btn-primary">Login
            </button>
        </div>
    </EditForm>

    <p>@message</p>
    
</div>


@code {
    private string message = "";
    public UserDTO userDTO = new UserDTO();

    private async Task LoginTask() {
        try {
            var response = await Http.PostAsJsonAsync("https://apiforflaggame-h9w2.onrender.com/api/User/login", userDTO);
            Console.WriteLine(response);

            if(response.IsSuccessStatusCode){
                var result = await response.Content.ReadFromJsonAsync<LoginResult>();
                var username = result?.Username;
                message = "Login successful";
                NavManager.NavigateTo("/");
            } else {
                message = "Login failed";
            }
        } catch (Exception ex){
            message = $"Der skete en fejl: {ex.Message}";
        }
    }
    
}
